import numpy as np

d = 3   # dimension of space (3D)

# Measurement data: maps landmark to {timestamp: measurement} dicts
y_bar = {
    0: {
        0: np.array([[6.7995,3.7473,1.4684]]).T,
        1: np.array([[6.8961,0.3455,1.3684]]).T,
        2: np.array([[5.2790,-2.6488,1.2684]]).T,
        3: np.array([[2.3813,-4.4334,1.1684]]).T,
    },
    1: {
        0: np.array([[9.7118,9.2069,-4.0114]]).T,
        1: np.array([[12.1481,3.6175,-4.1114]]).T,
        2: np.array([[11.4633,-2.4412,-4.2114]]).T,
        3: np.array([[7.8409,-7.3458,-4.3114]]).T,
    },
    2: {
        0: np.array([[8.9765,4.8641,-6.7632]]).T,
        1: np.array([[9.3399,0.2242,-6.8632]]).T,
        2: np.array([[7.3346,-3.9758,-6.9632]]).T,
        3: np.array([[3.4980,-6.6105,-7.0632]]).T,
    },
    3: {
        0: np.array([[-6.1760,9.2805,-9.2981]]).T,
        1: np.array([[-1.5744,11.6251,-9.3981]]).T,
        2: np.array([[3.5831,11.3548,-9.4981]]).T,
        3: np.array([[7.9144,8.5420,-9.5981]]).T,
    },
}

N = 1
for lm_meas in y_bar.values():
    for timestep in lm_meas.keys():
        N = max(N, timestep + 1)
K = len(y_bar)

# Covariances
Sigma_p = np.linalg.inv(4*np.eye(d))  # Covariance matrix for position
Sigma_v = np.linalg.inv(np.eye(d))  # Covariance matrix for velocity
Sigma_omega = np.linalg.inv(np.eye(d**2))  # Covariance matrix for angular velocity

# Initial guesses:
t_guess = [
    [0.0, 0.0, 0.0],
    [1.0, 0.0, 0.1],
    [1.8660254037844388, 0.49999999999999994, 0.2],
    [2.366025403784439, 1.3660254037844386, 0.30000000000000004],
]
R_guess = [
    np.array([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.5000000000000001, -0.8660254037844386, 0.0], [0.8660254037844386, 0.5000000000000001, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[2.1460752085336256e-16, -1.0, 0.0], [1.0, 2.0717043678169387e-16, 0.0], [0.0, 0.0, 1.0]]),
]
v_guess = [
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
]
Omega_guess = [
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
]
p_guess = [
    [6.7994678574207725, 3.7473153254172757, 1.468397383709128],
    [9.711839151946911, 9.206948960848894, -4.011427842048545],
    [8.97648040279121, 4.864060069878027, -6.763175615972495],
    [-6.176006820804647, 9.280475287243096, -9.298081546164816],
]
