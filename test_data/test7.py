import numpy as np

d = 3   # dimension of space (3D)

# Measurement data: maps landmark to {timestamp: measurement} dicts
y_bar = {
    0: {
        0: np.array([[9.3038,4.6694,-1.7598]]).T,
        1: np.array([[8.8109,3.6226,-1.8598]]).T,
        2: np.array([[8.1942,2.6437,-1.9598]]).T,
        3: np.array([[7.4627,1.7472,-2.0598]]).T,
        4: np.array([[6.6275,0.9466,-2.1598]]).T,
        5: np.array([[5.7009,0.2537,-2.2598]]).T,
    },
    1: {
        0: np.array([[4.2218,3.1101,0.8258]]).T,
        1: np.array([[3.5768,2.6943,0.7258]]).T,
        2: np.array([[2.8859,2.3602,0.6258]]).T,
        3: np.array([[2.1595,2.1127,0.5258]]).T,
        4: np.array([[1.4083,1.9557,0.4258]]).T,
        5: np.array([[0.6436,1.8913,0.3258]]).T,
    },
    2: {
        0: np.array([[1.3935,1.6877,-2.4489]]).T,
        1: np.array([[0.5963,1.6272,-2.5489]]).T,
        2: np.array([[-0.2024,1.6642,-2.6489]]).T,
        3: np.array([[-0.9906,1.7984,-2.7489]]).T,
        4: np.array([[-1.7566,2.0276,-2.8489]]).T,
        5: np.array([[-2.4890,2.3484,-2.9489]]).T,
    },
    3: {
        0: np.array([[7.6780,0.9878,2.3934]]).T,
        1: np.array([[6.7486,0.1666,2.2934]]).T,
        2: np.array([[5.7260,-0.5352,2.1934]]).T,
        3: np.array([[4.6255,-1.1072,2.0934]]).T,
        4: np.array([[3.4636,-1.5408,1.9934]]).T,
        5: np.array([[2.2575,-1.8296,1.8934]]).T,
    },
    4: {
        0: np.array([[9.2631,4.6986,0.2558]]).T,
        1: np.array([[8.7741,3.6566,0.1558]]).T,
        2: np.array([[8.1618,2.6819,0.0558]]).T,
        3: np.array([[7.4353,1.7891,-0.0442]]).T,
        4: np.array([[6.6053,0.9915,-0.1442]]).T,
        5: np.array([[5.6844,0.3010,-0.2442]]).T,
    },
    5: {
        0: np.array([[0.4140,3.8663,-1.5823]]).T,
        1: np.array([[-0.1104,3.9089,-1.6823]]).T,
        2: np.array([[-0.6258,4.0151,-1.7823]]).T,
        3: np.array([[-1.1243,4.1833,-1.8823]]).T,
        4: np.array([[-1.5987,4.4110,-1.9823]]).T,
        5: np.array([[-2.0417,4.6948,-2.0823]]).T,
    },
    6: {
        0: np.array([[4.3206,3.9477,-1.8379]]).T,
        1: np.array([[3.7770,3.5135,-1.9379]]).T,
        2: np.array([[3.1845,3.1489,-2.0379]]).T,
        3: np.array([[2.5520,2.8592,-2.1379]]).T,
        4: np.array([[1.8888,2.6488,-2.2379]]).T,
        5: np.array([[1.2050,2.5207,-2.3379]]).T,
    },
    7: {
        0: np.array([[6.0091,0.9436,-0.8612]]).T,
        1: np.array([[5.0868,0.3261,-0.9612]]).T,
        2: np.array([[4.0961,-0.1743,-1.0612]]).T,
        3: np.array([[3.0517,-0.5504,-1.1612]]).T,
        4: np.array([[1.9694,-0.7963,-1.2612]]).T,
        5: np.array([[0.8651,-0.9085,-1.3612]]).T,
    },
    8: {
        0: np.array([[2.5678,4.2965,2.7009]]).T,
        1: np.array([[2.0797,4.0734,2.6009]]).T,
        2: np.array([[1.5681,3.9115,2.5009]]).T,
        3: np.array([[1.0405,3.8131,2.4009]]).T,
        4: np.array([[0.5049,3.7797,2.3009]]).T,
        5: np.array([[-0.0308,3.8119,2.2009]]).T,
    },
    9: {
        0: np.array([[6.6262,-1.6314,-0.8744]]).T,
        1: np.array([[5.3854,-2.3049,-0.9744]]).T,
        2: np.array([[4.0718,-2.8222,-1.0744]]).T,
        3: np.array([[2.7050,-3.1755,-1.1744]]).T,
        4: np.array([[1.3053,-3.3596,-1.2744]]).T,
        5: np.array([[-0.1064,-3.3718,-1.3744]]).T,
    },
}

N = 1
for lm_meas in y_bar.values():
    for timestep in lm_meas.keys():
        N = max(N, timestep + 1)
K = len(y_bar)

# Covariances
Sigma_p = np.linalg.inv(4*np.eye(d))  # Covariance matrix for position
Sigma_v = np.linalg.inv(np.eye(d))  # Covariance matrix for velocity
Sigma_omega = np.linalg.inv(np.eye(d**2))  # Covariance matrix for angular velocity

# Initial guesses:
t_guess = [
    [0.0, 0.0, 0.0],
    [1.0, 0.0, 0.1],
    [1.992546151641322, 0.12186934340514748, 0.2],
    [2.9628418779173185, 0.3637912390048152, 0.3],
    [3.89642230441452, 0.7221591885501154, 0.39999999999999997],
    [4.779369897273447, 1.191630751336006, 0.49999999999999994],
]
R_guess = [
    np.array([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.9702957262759965, -0.2419218955996677, 0.0], [0.2419218955996677, 0.9702957262759964, 0.0], [0.0, 0.0, 0.9999999999999998]]),
    np.array([[0.9335804264972017, -0.3583679495453002, 0.0], [0.3583679495453002, 0.9335804264972016, 0.0], [0.0, 0.0, 0.9999999999999997]]),
    np.array([[0.8829475928589269, -0.4694715627858907, 0.0], [0.4694715627858907, 0.8829475928589268, 0.0], [0.0, 0.0, 0.9999999999999996]]),
    np.array([[0.8191520442889917, -0.5735764363510459, 0.0], [0.5735764363510459, 0.8191520442889916, 0.0], [0.0, 0.0, 0.9999999999999994]]),
]
v_guess = [
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
]
Omega_guess = [
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
]
p_guess = [
    [9.303762877225502, 4.669379544517384, -1.7598457660673352],
    [4.22175471789445, 3.110084914269658, 0.8258361264265393],
    [1.3935431041336233, 1.6877031930313628, -2.4488974774804975],
    [7.677953689298926, 0.9877690778134505, 2.3934220737666347],
    [9.263121427705013, 4.698617621511497, 0.2558287868771423],
    [0.41402646110880625, 3.866327139647632, -1.5822851402340385],
    [4.320640701606026, 3.9476539938379496, -1.8378655574652032],
    [6.009126786221747, 0.9436366745262852, -0.8611590394586113],
    [2.5677564530567967, 4.296481722380507, 2.7009298457351036],
    [6.626159292994982, -1.6314225739419381, -0.8744114230946582],
]
