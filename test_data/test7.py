import numpy as np

d = 3   # dimension of space (3D)

# Measurement data: maps landmark to {timestamp: measurement} dicts
y_bar = {
    0: {
        0: np.array([[2.2193,3.7877,1.2085]]).T,
        1: np.array([[1.6718,3.6109,1.1085]]).T,
        2: np.array([[1.1068,3.5021,1.0085]]).T,
        3: np.array([[0.5328,3.4630,0.9085]]).T,
        4: np.array([[-0.0417,3.4941,0.8085]]).T,
        5: np.array([[-0.6081,3.5950,0.7085]]).T,
    },
    1: {
        0: np.array([[7.9296,-0.3109,2.5646]]).T,
        1: np.array([[6.8401,-1.1531,2.4646]]).T,
        2: np.array([[5.6560,-1.8563,2.3646]]).T,
        3: np.array([[4.3951,-2.4099,2.2646]]).T,
        4: np.array([[3.0761,-2.8056,2.1646]]).T,
        5: np.array([[1.7187,-3.0377,2.0646]]).T,
    },
    2: {
        0: np.array([[4.7467,1.9967,0.7140]]).T,
        1: np.array([[3.9621,1.5252,0.6140]]).T,
        2: np.array([[3.1259,1.1528,0.5140]]).T,
        3: np.array([[2.2506,0.8851,0.4140]]).T,
        4: np.array([[1.3491,0.7261,0.3140]]).T,
        5: np.array([[0.4350,0.6782,0.2140]]).T,
    },
    3: {
        0: np.array([[6.3581,2.0494,0.3384]]).T,
        1: np.array([[5.5680,1.3811,0.2384]]).T,
        2: np.array([[4.7022,0.8141,0.1384]]).T,
        3: np.array([[3.7738,0.3568,0.0384]]).T,
        4: np.array([[2.7966,0.0161,-0.0616]]).T,
        5: np.array([[1.7852,-0.2029,-0.1616]]).T,
    },
    4: {
        0: np.array([[3.1638,2.0139,-0.9685]]).T,
        1: np.array([[2.3931,1.7352,-1.0685]]).T,
        2: np.array([[1.5942,1.5525,-1.1685]]).T,
        3: np.array([[0.7790,1.4685,-1.2685]]).T,
        4: np.array([[-0.0404,1.4845,-1.3685]]).T,
        5: np.array([[-0.8518,1.6002,-1.4685]]).T,
    },
    5: {
        0: np.array([[7.1894,3.0408,2.9399]]).T,
        1: np.array([[6.5139,2.2638,2.8399]]).T,
        2: np.array([[5.7487,1.5750,2.7399]]).T,
        3: np.array([[4.9052,0.9845,2.6399]]).T,
        4: np.array([[3.9961,0.5012,2.5399]]).T,
        5: np.array([[3.0349,0.1324,2.4399]]).T,
    },
    6: {
        0: np.array([[4.2885,4.7952,0.5961]]).T,
        1: np.array([[3.8484,4.3587,0.4961]]).T,
        2: np.array([[3.3583,3.9791,0.3961]]).T,
        3: np.array([[2.8257,3.6620,0.2961]]).T,
        4: np.array([[2.2584,3.4122,0.1961]]).T,
        5: np.array([[1.6648,3.2334,0.0961]]).T,
    },
    7: {
        0: np.array([[0.2164,3.7973,-2.6955]]).T,
        1: np.array([[-0.3149,3.8645,-2.7955]]).T,
        2: np.array([[-0.8342,3.9959,-2.8955]]).T,
        3: np.array([[-1.3335,4.1897,-2.9955]]).T,
        4: np.array([[-1.8055,4.4428,-3.0955]]).T,
        5: np.array([[-2.2432,4.7516,-3.1955]]).T,
    },
}

N = 1
for lm_meas in y_bar.values():
    for timestep in lm_meas.keys():
        N = max(N, timestep + 1)
K = len(y_bar)

# Covariances
Sigma_p = np.linalg.inv(4*np.eye(d))  # Covariance matrix for position
Sigma_v = np.linalg.inv(np.eye(d))  # Covariance matrix for velocity
Sigma_omega = np.linalg.inv(np.eye(d**2))  # Covariance matrix for angular velocity

# Initial guesses:
t_guess = [
    [0.0, 0.0, 0.0],
    [1.0, 0.0, 0.1],
    [1.992546151641322, 0.12186934340514748, 0.2],
    [2.9628418779173185, 0.3637912390048152, 0.3],
    [3.89642230441452, 0.7221591885501154, 0.39999999999999997],
    [4.779369897273447, 1.191630751336006, 0.49999999999999994],
]
R_guess = [
    np.array([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.9702957262759965, -0.2419218955996677, 0.0], [0.2419218955996677, 0.9702957262759964, 0.0], [0.0, 0.0, 0.9999999999999998]]),
    np.array([[0.9335804264972017, -0.3583679495453002, 0.0], [0.3583679495453002, 0.9335804264972016, 0.0], [0.0, 0.0, 0.9999999999999997]]),
    np.array([[0.8829475928589269, -0.4694715627858907, 0.0], [0.4694715627858907, 0.8829475928589268, 0.0], [0.0, 0.0, 0.9999999999999996]]),
    np.array([[0.8191520442889917, -0.5735764363510459, 0.0], [0.5735764363510459, 0.8191520442889916, 0.0], [0.0, 0.0, 0.9999999999999994]]),
]
v_guess = [
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
    [1.0, 0.0, 0.1],
]
Omega_guess = [
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
    np.array([[0.992546151641322, -0.12186934340514748, 0.0], [0.12186934340514748, 0.992546151641322, 0.0], [0.0, 0.0, 0.9999999999999999]]),
]
p_guess = [
    [2.2192547924402497, 3.787707493507197, 1.2085219970850805],
    [7.929622474610007, -0.31094461434246057, 2.564585198682865],
    [4.746734198219772, 1.996686127476849, 0.7139744142795914],
    [6.358136132315235, 2.049354023769296, 0.33837160482437856],
    [3.163812586504985, 2.013886024193866, -0.9684626753355414],
    [7.18944509416974, 3.0407869063195454, 2.939864926547953],
    [4.288509489765802, 4.795217477088634, 0.5961083357191765],
    [0.21644732632240316, 3.7973173104589995, -2.695453062009803],
]
