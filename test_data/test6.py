import numpy as np

d = 3   # dimension of space (3D)

# Measurement data: maps landmark to {timestamp: measurement} dicts
y_bar = {
    0: {
        0: np.array([[-4.9159,-2.3152,-3.1709]]).T,
        1: np.array([[-6.2809,0.9529,-3.6709]]).T,
        2: np.array([[-5.8290,4.4657,-4.1709]]).T,
        3: np.array([[-3.6812,7.2819,-4.6709]]).T,
    },
    1: {
        0: np.array([[-0.5548,-0.9460,-0.2165]]).T,
        1: np.array([[-1.8195,-0.0419,-0.7165]]).T,
        2: np.array([[-2.4627,1.3735,-1.2165]]).T,
        3: np.array([[-2.3120,2.9208,-1.7165]]).T,
    },
    2: {
        0: np.array([[2.8427,-4.1587,-0.6948]]).T,
        1: np.array([[-0.4835,-4.5229,-1.1948]]).T,
        2: np.array([[-3.5462,-3.1752,-1.6948]]).T,
        3: np.array([[-5.5247,-0.4767,-2.1948]]).T,
    },
    3: {
        0: np.array([[4.6605,5.5338,0.9360]]).T,
        1: np.array([[5.9370,2.9621,0.4360]]).T,
        2: np.array([[5.7566,0.0968,-0.0640]]).T,
        3: np.array([[4.1677,-2.2945,-0.5640]]).T,
    },
    4: {
        0: np.array([[2.8884,3.2884,2.1676]]).T,
        1: np.array([[3.2796,1.9036,1.6676]]).T,
        2: np.array([[2.9260,0.5088,1.1676]]).T,
        3: np.array([[1.9224,-0.5224,0.6676]]).T,
    },
    5: {
        0: np.array([[4.2826,3.2030,-3.2846]]).T,
        1: np.array([[4.4443,1.1326,-3.7846]]).T,
        2: np.array([[3.5491,-0.7413,-4.2846]]).T,
        3: np.array([[1.8370,-1.9166,-4.7846]]).T,
    },
}

N = 1
for lm_meas in y_bar.values():
    for timestep in lm_meas.keys():
        N = max(N, timestep + 1)
K = len(y_bar)

# Covariances
Sigma_p = np.linalg.inv(4*np.eye(d))  # Covariance matrix for position
Sigma_v = np.linalg.inv(np.eye(d))  # Covariance matrix for velocity
Sigma_omega = np.linalg.inv(np.eye(d**2))  # Covariance matrix for angular velocity

# Initial guesses:
t_guess = [
    [0.0, 0.0, 0.0],
    [1.0, 0.0, 0.5],
    [1.8660254037844388, 0.49999999999999994, 1.0],
    [2.366025403784439, 1.3660254037844386, 1.5],
]
R_guess = [
    np.array([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.5000000000000001, -0.8660254037844386, 0.0], [0.8660254037844386, 0.5000000000000001, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[2.1460752085336256e-16, -1.0, 0.0], [1.0, 2.0717043678169387e-16, 0.0], [0.0, 0.0, 1.0]]),
]
v_guess = [
    [1.0, 0.0, 0.5],
    [1.0, 0.0, 0.5],
    [1.0, 0.0, 0.5],
]
Omega_guess = [
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
    np.array([[0.8660254037844387, -0.49999999999999994, 0.0], [0.49999999999999994, 0.8660254037844387, 0.0], [0.0, 0.0, 1.0]]),
]
p_guess = [
    [-4.915871272996, -2.3151681406525246, -3.1709088037717095],
    [-0.5547827428015459, -0.9460212260843033, -0.2165190097813703],
    [2.842723292290488, -4.158695238370661, -0.6948311688807696],
    [4.660503143915701, 5.533758060902025, 0.935985319198994],
    [2.8884249316748907, 3.2884179429058484, 2.167634084865986],
    [4.282586228312621, 3.202982499454828, -3.284600455845165],
]
